console.log('Say my name');

Как сгенерировать shh-ключ:

Откройте терминал и выполните ssh-keygen -t rsa -b 4096
Нажмите Enter, чтобы принять стандартное расположение файла.
Введите пароль или нажмите Enter, чтобы оставить его пустым.
Выполните cat ./.ssh/id_rsa.pub, чтобы скопировать (ПКМ) открытый ключ.
Перейдите в настройки GitHub -> SSH and GPG keys -> New SSH key -> вставьте ключ.

  2. Как добавить к себе чей-то репозиторий:
Шаги:
Скопируйте URL репозитория с GitHub (зеленая кнопка Code).
В терминале выполните git clone <URL репозитория>.


  
4. Как сохранить изменения на GitHub (сделать коммит):
Шаги:
Выполните git add -A/ git add - -all, чтобы добавить все изменения.
Выполните git commit -m "Описание коммита".
Выполните git push, чтобы отправить изменения на GitHub.

  
5. Как работать со своим репозиторием с другого устройства:
Шаги:
Склонируйте свой репозиторий с GitHub на другое устройство: git clone <URL вашего репозитория>.
Вносите изменения, коммитите и отправляйте их обратно на GitHub.

  
6. Как открыть VSCode из терминала Linux:
Шаги:
В терминале выполните code <имя-файла(папки)>. для открытия текущего каталога в VSCode.

  
7. Как запустить программу в терминале (через Node.js):
Шаги:
Введите node имя_файла.js, чтобы выполнить программу Node.js в терминале.

  КОМАНДЫ ДЛЯ РУБЕЖНОЙ АТТЕСТАЦИИ:

1. Проверка ssh ключа: ssh -T git@github.com
2. ssh-keygen -t rsa -b 4096
3. cat .ssh/id_rsa.pub
4. Через настройки добавляем ssh ключ
5. Репозиторий для рубежной аттестации нужно склонировать к себе на компьютер:
зелёная кнопка code => ssh ссылка => терминал => git clone <ssh_ссылка>
6. Заходим в папку со склонированным репозиторием с помощью команды cd <название>
7. ls чтобы посмотреть что находится в папке
8. cat Makefile 
9. !!! make install
10. ls => должна появиться папка node_modules
11. code <Открыть файл>
12. Создать 5 пустышек функций, которые указаны в задании(НЕ ЗАБЫТЬ ЭКСПОРТИРОВАТЬ!!!!!)( export {функции} )
13. make lint - линтер
14. make lint-fix
15. make lint
16. make test - проверить тесты
17. всегда возвращаем значением return
18. не забывать вызывать функцию через console.log И СТАВИТЬ ПЕРЕД НИМ //!!!
19. открыть терминал и попробовать запустить: node <name_file>
20. Перед тем как отпушить избавиться от всех ошибок линтера
21. git add -A
22. git commit -m "НОРМАЛЬНЫЙ КОММЕНТАРИЙ"
23. git push (пушить после каждого задания)



